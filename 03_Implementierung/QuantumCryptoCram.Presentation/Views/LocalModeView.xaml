<UserControl x:Class="QuantumCryptoCram.Presentation.Views.LocalModeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:QuantumCryptoCram.Presentation.Views"
             xmlns:Domain="clr-namespace:QuantumCryptoCram.Domain.Protocol;assembly=QuantumCryptoCram.Domain"
             xmlns:s="https://github.com/canton7/Stylet"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:controls="clr-namespace:QuantumCryptoCram.Presentation.Controls"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             Background="{DynamicResource MaterialDesignPaper}"
             TextElement.FontWeight="Medium"
             TextElement.FontSize="14"
             FontFamily="{materialDesign:MaterialDesignFont}"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800"
             x:Name="Window">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <controls:TopBarView Title="Lokaler Modus"
                             BackButtonCommand="{Binding BackCommand}"
                             HelpButtonCommand="{Binding HelpCommand}" 
                             Grid.Row="0" />

        <GroupBox Header="Simulationsoptionen"
                  Grid.Row="1">
            <StackPanel Orientation="Vertical">
                <CheckBox Content="_Photonen klonen"
                          IsChecked="{Binding IsPhotonCloningChecked, Mode=TwoWay}" />
                <CheckBox Content="_Eve"
                          x:Name="eveCheckBox"
                          IsChecked="{Binding IsEveChecked, Mode=TwoWay}" />
                <GroupBox Header="RollenpasswÃ¶rter (optional)"
                          Grid.Row="1">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="0.2*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="0.2*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="0.2*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" MinHeight="30" />
                        </Grid.RowDefinitions>
                        <Button Content="Passwort Alice"
                                Command="{s:Action SetPasswordForRole}"
                                CommandParameter="{x:Static Domain:ProtocolRoleType.Alice}"
                                Grid.Column="0"
                                Margin="3">
                        </Button>
                        <Button Content="Passwort Eve"
                                Command="{s:Action SetPasswordForRole}"
                                CommandParameter="{x:Static Domain:ProtocolRoleType.Eve}"
                                IsEnabled="{Binding ElementName=eveCheckBox, Path=IsChecked}"
                                Grid.Column="2"
                                Margin="3">
                        </Button>
                        <Button Content="Passwort Bob"
                                Command="{s:Action SetPasswordForRole}"
                                CommandParameter="{x:Static Domain:ProtocolRoleType.Bob}"
                                Grid.Column="4"
                                Margin="3">
                        </Button>
                        <CheckBox Grid.Column="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  IsHitTestVisible="False"
                                  IsChecked="{Binding CredentialsManager.IsAlicePasswordSet, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <CheckBox Grid.Column="3"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  IsHitTestVisible="False"
                                  IsChecked="{Binding CredentialsManager.IsEvePasswordSet, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <CheckBox Grid.Column="5"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  IsHitTestVisible="False"
                                  IsChecked="{Binding CredentialsManager.IsBobPasswordSet, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </Grid>
                </GroupBox>
            </StackPanel>
        </GroupBox>

        <Button Command="{s:Action StartSimulationCommand}"
                Content="_Simulation starten"
                Grid.Row="2" />
    </Grid>
</UserControl>