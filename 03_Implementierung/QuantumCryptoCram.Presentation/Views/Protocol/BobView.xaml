<UserControl x:Class="QuantumCryptoCram.Presentation.Views.Protocol.BobView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:domain="clr-namespace:QuantumCryptoCram.Domain.Quantum;assembly=QuantumCryptoCram.Domain"
             xmlns:controls="clr-namespace:QuantumCryptoCram.Presentation.Controls"
             xmlns:conv="clr-namespace:QuantumCryptoCram.Presentation.Converters"
             xmlns:s="https://github.com/canton7/Stylet"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             Background="{DynamicResource MaterialDesignPaper}"
             TextElement.FontWeight="Medium"
             TextElement.FontSize="14"
             FontFamily="{materialDesign:MaterialDesignFont}"
             mc:Ignorable="d"
             d:DesignWidth="1500"
             d:DesignHeight="800"
             x:Name="Bob">

    <UserControl.Resources>
        <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
               TargetType="RadioButton" />
        <conv:BoolToColorConverter x:Key="boolToColorConverter" />
    </UserControl.Resources>

    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.67*" />
            <ColumnDefinition Width="0.33*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <controls:TopBarView Title="Bob"
                             Grid.Column="0"
                             Grid.ColumnSpan="2"
                             Grid.Row="0"
                             BackButtonCommand="{Binding BackCommand}"
                             HelpButtonCommand="{Binding HelpCommand}" />

        <GroupBox Header="Tabelle"
                  Grid.Row="1">
            <controls:ProtocolNotebookView IsProtocolInProgress="{Binding IsProtocolInProgress}" />
        </GroupBox>

        <GroupBox Header="Interaktionsübersicht"
                  Grid.Row="2"
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  IsEnabled="{Binding IsProtocolInProgress}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.25*" />
                    <ColumnDefinition Width="0.15*" />
                    <ColumnDefinition Width="0.15*" />
                    <ColumnDefinition Width="0.15*" />
                    <ColumnDefinition Width="0.15*" />
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="0.5*" />
                    <RowDefinition Height="0.5*" />
                </Grid.RowDefinitions>

                <TextBox Background="Blue"
                         Grid.Column="0"
                         Grid.Row="0"
                         Margin="0, 10, 10, 10">
                    <TextBox.Style>
                        <Style TargetType="TextBox"
                               BasedOn="{StaticResource ChannelStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PublicChannelUpdateTrigger}"
                                             Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource FlickerAnimation}" />
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <Button Command="{s:Action SendPolarisationsCommand}"
                        Grid.Column="1"
                        Grid.Row="0"
                        Margin="0,0,5,0"
                        Height="Auto">
                    <TextBlock TextWrapping="Wrap"
                               TextAlignment="Center">Polarisation senden</TextBlock>
                </Button>

                <Button Command="{s:Action SendPolarisationMatchesCommand}"
                        Grid.Column="2"
                        Grid.Row="0"
                        Margin="0,0,5,0"
                        Height="Auto">
                    <TextBlock TextWrapping="Wrap"
                               TextAlignment="Center">Polarisation Übereinstimmung senden</TextBlock>
                </Button>

                <Button Command="{s:Action SendPreKeySelectionForComparisonCommand}"
                        Grid.Column="3"
                        Grid.Row="0"
                        Margin="0,0,5,0"
                        Height="Auto">
                    <TextBlock TextWrapping="Wrap"
                               TextAlignment="Center">Prekey Auswahl senden</TextBlock>
                </Button>

                <Button Command="{s:Action SendPreKeyMatchesCommand}"
                        Grid.Column="4"
                        Grid.Row="0"
                        Height="Auto">
                    <TextBlock TextWrapping="Wrap"
                               TextAlignment="Center">Prekey Übereinstimmung senden</TextBlock>
                </Button>

                <TextBox Background="Red"
                         Grid.Row="1"
                         Grid.Column="0"
                         Grid.ColumnSpan="5"
                         TextAlignment="Right"
                         Text="{Binding PendingPhotonsCount}">
                    <TextBox.Style>
                        <Style TargetType="TextBox"
                               BasedOn="{StaticResource ChannelStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding QuantumChannelUpdateTrigger}"
                                             Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource FlickerAnimation}" />
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </Grid>
        </GroupBox>

        <GroupBox Header="Polarisationen erzeugen"
                  Grid.Row="1"
                  Grid.Column="1"
                  IsEnabled="{Binding IsProtocolInProgress}">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*" />
                    <ColumnDefinition Width="0.5*" />
                </Grid.ColumnDefinitions>

                <controls:PolarisationView Grid.Row="0"
                                           Grid.Column="0"
                                           Grid.ColumnSpan="2"
                                           Polarisation="{Binding SelectedPolarisation}"
                                           MaxHeight="180"
                                           MaxWidth="180"
                                           HorizontalAlignment="Center"
                                           Margin="0 15" />
                <Button Content="x"
                        Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="0, 5"
                        Command="{s:Action NoteDownPolarisationCommand}"
                        CommandParameter="{x:Static domain:Polarisation.Diagonal}" />

                <Button Content="+"
                        Grid.Row="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="0, 5"
                        Command="{s:Action NoteDownPolarisationCommand}"
                        CommandParameter="{x:Static domain:Polarisation.Rectilinear}" />

                <Grid Grid.Row="3"
                      Grid.Column="0"
                      Grid.ColumnSpan="2"
                      Margin="0,15,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*" />
                        <ColumnDefinition Width="0.5*" />
                    </Grid.ColumnDefinitions>

                    <TextBox Text="{Binding AmountRandomPolarisations}"
                             materialDesign:HintAssist.Hint="Anzahl"
                             Grid.Row="0"
                             Grid.Column="0"
                             VerticalAlignment="Center" />

                    <Separator Grid.Row="1"
                               Grid.ColumnSpan="2"
                               Margin="0 20"/>
                    <Button Command="{s:Action NoteDownRandomPolarisationsCommand}"
                            Margin="10"
                            Height="Auto"
                            Grid.Row="0"
                            Grid.Column="1">
                        <TextBlock TextWrapping="Wrap"
                                   TextAlignment="Center">Zufällige Polarisationen übernehmen</TextBlock>
                    </Button>

                    <TextBox Name="TB_AmountOfRandomPreKeyBits"
                             materialDesign:HintAssist.Hint="Anzahl"
                             Grid.Row="2"
                             Grid.Column="0"
                             VerticalAlignment="Center" />

                    <Button Command="{s:Action SelectRandomDatabitsAsPreKeyCommand}"
                            CommandParameter="{Binding Text, ElementName=TB_AmountOfRandomPreKeyBits}"
                            Margin="10"
                            Height="Auto"
                            Grid.Row="2"
                            Grid.Column="1">
                        <TextBlock TextWrapping="Wrap"
                                   TextAlignment="Center">Zufällige PreKey-Bits übernehmen</TextBlock>
                    </Button>
                </Grid>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>