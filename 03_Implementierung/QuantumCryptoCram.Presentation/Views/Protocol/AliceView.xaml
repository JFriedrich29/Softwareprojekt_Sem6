<UserControl x:Class="QuantumCryptoCram.Presentation.Views.Protocol.AliceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:domain="clr-namespace:QuantumCryptoCram.Domain.Quantum;assembly=QuantumCryptoCram.Domain"
             xmlns:controls="clr-namespace:QuantumCryptoCram.Presentation.Controls"
             xmlns:conv="clr-namespace:QuantumCryptoCram.Presentation.Converters"
             xmlns:s="https://github.com/canton7/Stylet"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             Background="{DynamicResource MaterialDesignPaper}"
             TextElement.FontWeight="Medium"
             TextElement.FontSize="14"
             FontFamily="{materialDesign:MaterialDesignFont}"
             mc:Ignorable="d"
             d:DesignHeight="700"
             x:Name="Alice">

    <UserControl.Resources>
        <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
               TargetType="RadioButton" />

        <conv:BoolToColorConverter x:Key="boolToColorConverter" />
        <Storyboard x:Key="FlickerQuantumChannelAnimation">
            <DoubleAnimation Storyboard.TargetName="Rect_QuantumChannel"
                             Storyboard.TargetProperty="Opacity"
                             From="0.1"
                             To="1"
                             RepeatBehavior="1x"
                             AutoReverse="False"
                             Duration="0:0:0.2" />
        </Storyboard>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.33*" />
            <ColumnDefinition Width="0.67*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <controls:TopBarView Title="Alice"
                             Grid.Column="0"
                             Grid.ColumnSpan="2"
                             Grid.Row="0"
                             BackButtonCommand="{Binding BackCommand}"
                             HelpButtonCommand="{Binding HelpCommand}" />

        <!--Generierung Abschnitt-->
        <GroupBox Header="Photonen generieren"
                  Grid.Column="0"
                  Grid.Row="1"
                  IsEnabled="{Binding IsProtocolInProgress}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*" />
                    <ColumnDefinition Width="0.5*" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0"
                      Grid.Column="0"
                      Grid.ColumnSpan="2">
                    <controls:PhotonView Polarisation="{Binding SelectedPolarisation}"
                                         Bit="{Binding SelectedBit}"
                                         Width="150"
                                         Margin="20"
                                         MaxHeight="180"
                                         MaxWidth="180"
                                         d:Height="100"
                                         HorizontalAlignment="Center" />
                </Grid>

                <StackPanel Orientation="Vertical"
                            Grid.Row="1"
                            Grid.Column="0">
                    <StackPanel Orientation="Horizontal"
                                Margin="4">
                        <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                                     Tag="True"
                                     Content="1"
                                     Command="{s:Action BitChangedCommand}"
                                     CommandParameter="{x:Static domain:DataBit.One}" />
                        <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                                     Tag="True"
                                     Content="0"
                                     IsChecked="True"
                                     Command="{s:Action BitChangedCommand}"
                                     CommandParameter="{x:Static domain:DataBit.Zero}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal"
                                Margin="4">
                        <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                                     Tag="True"
                                     Content="x"
                                     Command="{s:Action PolarisationChangedCommand}"
                                     CommandParameter="{x:Static domain:Polarisation.Diagonal}" />
                        <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}"
                                     Tag="True"
                                     Content="+"
                                     IsChecked="True"
                                     Command="{s:Action PolarisationChangedCommand}"
                                     CommandParameter="{x:Static domain:Polarisation.Rectilinear}" />
                    </StackPanel>
                </StackPanel>

                <Button Command="{s:Action NoteDownPhotonCommand}"
                        Margin="10"
                        Grid.Row="1"
                        Grid.Column="1">
                    <TextBlock TextWrapping="Wrap"
                               TextAlignment="Center">Photon übernehmen</TextBlock>
                </Button>

                <TextBox Grid.Row="2"
                         Grid.Column="0"
                         Name="TB_AmountOfRandomPhotons"
                         materialDesign:HintAssist.Hint="Anzahl"
                         VerticalAlignment="Center" />

                <Button Grid.Row="2"
                        Grid.Column="1"
                        Command="{s:Action NoteDownRandomPhotonsCommand}"
                        CommandParameter="{Binding Text, ElementName=TB_AmountOfRandomPhotons}"
                        Margin="10"
                        Height="Auto">
                    <TextBlock TextWrapping="Wrap"
                               TextAlignment="Center">Zufällige Photonen übernehmen</TextBlock>
                </Button>

                <Separator Grid.Row="3"
                           Grid.ColumnSpan="2"
                           Margin="0 20 5 20"/>

                <TextBox  Grid.Row="4"
                          Grid.Column="0"
                          Name="TB_AmountOfRandomPreKeyBits"
                          materialDesign:HintAssist.Hint="Anzahl"
                          VerticalAlignment="Center" />

                <Button  Grid.Row="4"
                         Grid.Column="1"
                         Command="{s:Action SelectRandomDatabitsAsPreKeyCommand}"
                         CommandParameter="{Binding Text, ElementName=TB_AmountOfRandomPreKeyBits}"
                         Margin="10"
                         Height="Auto">
                    <TextBlock TextWrapping="Wrap"
                               TextAlignment="Center">Zufällige PreKey-Bits übernehmen</TextBlock>
                </Button>
            </Grid>
        </GroupBox>

        <!--Tabelle Abschnitt-->
        <GroupBox Header="Tabelle"
                  Grid.Row="1"
                  Grid.Column="1">
            <controls:ProtocolNotebookView IsProtocolInProgress="{Binding IsProtocolInProgress}"
                                           HasPhotonSent="True" />
        </GroupBox>

        <GroupBox Header="Interaktionsübersicht"
                  Grid.Row="2"
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  IsEnabled="{Binding IsProtocolInProgress}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.15*" />
                    <ColumnDefinition Width="0.15*" />
                    <ColumnDefinition Width="0.15*" />
                    <ColumnDefinition Width="0.15*" />
                    <ColumnDefinition Width="0.4*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.5*">
                        <!--<RowDefinition.Style>
                            <Style>
                                <Style.Triggers>
                                    <EventTrigger RoutedEvent="Button.Click">
                                        <BeginStoryboard Storyboard="{StaticResource FlickerPublicChannelAnimation}" />
                                    </EventTrigger>
                                </Style.Triggers>
                            </Style>
                        </RowDefinition.Style>-->
                    </RowDefinition>
                    <RowDefinition Height="0.5*" />
                </Grid.RowDefinitions>
                <!--<Grid.Triggers>
                    <EventTrigger RoutedEvent="Button.Click">
                        <BeginStoryboard Storyboard="{StaticResource FlickerPublicChannelAnimation}" />
                    </EventTrigger>
                </Grid.Triggers>-->

                <!--Public Channel-->

                <Button Command="{s:Action SendPolarisationsCommand}"
                        Grid.Column="0"
                        Grid.Row="0"
                        Margin="0,0,5,0"
                        Height="Auto">
                    <!--Style="{StaticResource FlickerPublicChannelStyle}">-->
                    <TextBlock TextWrapping="Wrap"
                               TextAlignment="Center">Polarisation senden</TextBlock>
                </Button>
                <Button Command="{s:Action SendPolarisationMatchesCommand}"
                        Grid.Column="1"
                        Grid.Row="0"
                        Margin="0,0,5,0"
                        Height="Auto">
                    <TextBlock TextWrapping="Wrap"
                               TextAlignment="Center">Polarisation Übereinstimmung senden</TextBlock>
                </Button>
                <Button Command="{s:Action SendPreKeySelectionForComparisonCommand}"
                        Grid.Column="2"
                        Grid.Row="0"
                        Margin="0,0,5,0"
                        Height="Auto">
                    <TextBlock TextWrapping="Wrap"
                               TextAlignment="Center">Prekey Auswahl senden</TextBlock>
                </Button>
                <Button Command="{s:Action SendPreKeyMatchesCommand}"
                        Grid.Column="3"
                        Grid.Row="0"
                        Margin="0,0,5,0"
                        Height="Auto">
                    <TextBlock TextWrapping="Wrap"
                               TextAlignment="Center">Prekey Übereinstimmung senden</TextBlock>
                </Button>

                <TextBox Background="Blue"
                         Grid.Column="4"
                         Grid.Row="0"
                         Margin="5, 10, 0, 10">
                    <TextBox.Style>
                        <Style TargetType="TextBox"
                               BasedOn="{StaticResource ChannelStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PublicChannelUpdateTrigger}"
                                             Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource FlickerAnimation}" />
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <!--<Rectangle Name="Rect_PublicChannel"
                           Fill="Blue"
                           Grid.Column="4"
                           Grid.Row="0"
                           Height="20"
                           Margin="5, 10, 0, 10">
                    <Rectangle.Style>
                        <Style TargetType="Rectangle">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PublicChannelUpdateTrigger}"
                                             Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource FlickerAnimation}" />
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>-->

                <Button Command="{s:Action SendPhotonsCommand}"
                        Grid.Column="0"
                        Grid.Row="1"
                        Margin="0,5,5,0"
                        Height="Auto">
                    <TextBlock TextWrapping="Wrap"
                               TextAlignment="Center">Photonen senden</TextBlock>
                    <!--<Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard Storyboard="{StaticResource FlickerQuantumChannelAnimation}" />
                        </EventTrigger>
                    </Button.Triggers>-->
                </Button>

                <TextBox Background="Red"
                         Grid.Column="1"
                         Grid.ColumnSpan="4"
                         Grid.Row="1"
                         Margin="0 10">
                    <TextBox.Style>
                        <Style TargetType="TextBox"
                               BasedOn="{StaticResource ChannelStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding QuantumChannelUpdateTrigger}"
                                             Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource FlickerAnimation}" />
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <!--<Rectangle Fill="Red"
                           Name="Rect_QuantumChannel"
                           Grid.Column="1"
                           Grid.ColumnSpan="4"
                           Grid.Row="1"
                           Height="20"
                           Margin="5, 15, 0, 10">
                    <Rectangle.Style>
                        <Style TargetType="Rectangle">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding QuantumChannelUpdateTrigger}"
                                             Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource FlickerAnimation}" />
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>-->
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>