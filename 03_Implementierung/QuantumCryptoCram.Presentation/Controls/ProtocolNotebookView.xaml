<UserControl x:Class="QuantumCryptoCram.Presentation.Controls.ProtocolNotebookView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="clr-namespace:QuantumCryptoCram.Presentation.Controls"
             xmlns:conv="clr-namespace:QuantumCryptoCram.Presentation.Converters"
             xmlns:designTime="clr-namespace:QuantumCryptoCram.Presentation.DesignTime"
             xmlns:s="https://github.com/canton7/Stylet"
             mc:Ignorable="d">

    <UserControl.Resources>
        <conv:BoolToColorConverter x:Key="boolToColorConverter"></conv:BoolToColorConverter>
        <conv:BoolToFontWeightConverter x:Key="boolToFontWeightConverter"></conv:BoolToFontWeightConverter>
        <conv:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"></conv:BoolToVisibilityConverter>
        <designTime:NotebookDesignTimeVM x:Key="notebookDesignTimeVM" />
    </UserControl.Resources>
    <ScrollViewer HorizontalScrollBarVisibility="Auto"
                  VerticalScrollBarVisibility="Auto">
        <DataGrid ItemsSource="{Binding Path=ProtocolNotebook}"
                  d:DataContext="{StaticResource notebookDesignTimeVM}"
                  x:Name="test"
                  IsEnabled="{Binding IsProtocolInProgress}"
                  AutoGenerateColumns="False"
                  CanUserSortColumns="False"
                  CanUserDeleteRows="False"
                  CanUserAddRows="False"
                  CanUserResizeColumns="False"
                  PreviewMouseWheel="UIElement_OnPreviewMouseWheel"
                  ScrollViewer.CanContentScroll="True">
            <DataGrid.Columns>
                <!--Id-->
                <DataGridTextColumn Header="ID"
                                    Binding="{Binding InternalNotebookEntry.Id}"
                                    IsReadOnly="True">
                </DataGridTextColumn>

                <!--Eigene Datenbits-->
                <DataGridTextColumn Header="Eigene&#x0d;&#x0a;Datenbits"
                                    Binding="{Binding InternalNotebookEntry.MyData}"
                                    IsReadOnly="True">
                </DataGridTextColumn>

                <!--Eigene Polarisation-->
                <DataGridTemplateColumn Header="Eigene&#x0d;&#x0a;Polarisation">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DockPanel>
                                <controls:PolarisationView Polarisation="{Binding InternalNotebookEntry.MyPolarisation}"
                                                           HorizontalAlignment="Left" />
                                <materialDesign:PackIcon Kind="SendCheck"
                                                         Visibility="{Binding InternalNotebookEntry.WasPolarisationSent, Converter={StaticResource boolToVisibilityConverter}}"
                                                         HorizontalAlignment="Right"
                                                         VerticalAlignment="Bottom"
                                                         Width="10"
                                                         Height="10" />
                            </DockPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MaterialDesignDataGridCell}">
                            <Setter Property="Background"
                                    Value="{Binding InternalNotebookEntry.IsPolarisationMatching, Converter={StaticResource boolToColorConverter}}" />
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                </DataGridTemplateColumn>

                <!--Photon gesendet-->
                <DataGridTemplateColumn Header="Photon&#x0d;&#x0a;gesendet"
                                        x:Name="PhotonSentColumn"
                                        Visibility="Hidden"
                                        IsReadOnly="true">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <materialDesign:PackIcon Kind="SendCheck"
                                                     Visibility="{Binding InternalNotebookEntry.WasPhotonSent, Converter={StaticResource boolToVisibilityConverter}}"
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--Polarisation des Partners-->
                <DataGridTemplateColumn Header="Polarisation&#x0d;&#x0a;des Partners">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <controls:PolarisationView Polarisation="{Binding InternalNotebookEntry.PolarisationPartner}"
                                                       HorizontalAlignment="Center" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellStyle>
                        <Style TargetType="DataGridCell"
                               BasedOn="{StaticResource MaterialDesignDataGridCell}">
                            <Setter Property="Background"
                                    Value="{Binding InternalNotebookEntry.IsPolarisationMatching, Converter={StaticResource boolToColorConverter}}" />
                        </Style>
                    </DataGridTemplateColumn.CellStyle>
                </DataGridTemplateColumn>

                <!--Übereinstimmung Polarisationen-->
                <DataGridCheckBoxColumn Binding="{Binding InternalNotebookEntry.IsPolarisationMatching, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="IsEnabled"
                                    Value="{Binding IsPolarisationMatchingCheckboxEnabled}" />
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                    <DataGridCheckBoxColumn.Header>
                        <StackPanel>
                            <Label Content="Übereinstimmung&#x0d;&#x0a;Polarisationen" />
                            <Button Content="Auto Check"
                                    Command="{s:Action AutoCheckPolarisationCommand}" />
                        </StackPanel>
                    </DataGridCheckBoxColumn.Header>
                </DataGridCheckBoxColumn>

                <!--Eigener PreKey-->
                <DataGridTextColumn Header="Eigener&#x0d;&#x0a;PreKey"
                                    Binding="{Binding InternalNotebookEntry.PreKey}"
                                    Foreground="Black"
                                    IsReadOnly="True">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background"
                                    Value="{Binding InternalNotebookEntry.IsPreKeyMatching, Converter={StaticResource boolToColorConverter}}" />
                            <Setter Property="FontWeight"
                                    Value="{Binding InternalNotebookEntry.WasPreKeySelectionSentOrReceived, Converter={StaticResource boolToFontWeightConverter}}" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <!--Eigene PreKey Auswahl-->
                <DataGridCheckBoxColumn Header="Eigene PreKey&#x0d;&#x0a;Auswahl"
                                        Binding="{Binding InternalNotebookEntry.IsPreKeySelectedForComparison, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="IsEnabled"
                                    Value="{Binding IsSelectPrekeyForComparisonCheckboxEnabled}" />
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                </DataGridCheckBoxColumn>

                <!--PreKey Auswahl des Partners-->
                <DataGridTextColumn Header="PreKey Auswahl&#x0d;&#x0a;des Partners"
                                    Binding="{Binding InternalNotebookEntry.PreKeyPartner}"
                                    Foreground="Black"
                                    IsReadOnly="True">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="Background"
                                    Value="{Binding InternalNotebookEntry.IsPreKeyMatching, Converter={StaticResource boolToColorConverter}}" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <!--Übereinstimmung PreKey-Bits-->
                <DataGridCheckBoxColumn Binding="{Binding InternalNotebookEntry.IsPreKeyMatching, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Setter Property="IsEnabled"
                                    Value="{Binding IsPreKeyMatchingCheckboxEnabled}" />
                        </Style>
                    </DataGridCheckBoxColumn.CellStyle>
                    <DataGridCheckBoxColumn.Header>
                        <StackPanel>
                            <Label Content="Übereinstimmung&#x0d;&#x0a;PreKey-Bits"></Label>
                            <Button Content="Auto Check"
                                    Command="{s:Action AutoCheckPreKeyBitsCommand}" />
                        </StackPanel>
                    </DataGridCheckBoxColumn.Header>
                </DataGridCheckBoxColumn>

                <!--FinalKey-->
                <DataGridTextColumn Binding="{Binding InternalNotebookEntry.FinalKey}"
                                    IsReadOnly="True">
                    <DataGridTextColumn.Header>
                        <StackPanel>
                            <Label Content="FinalKey"></Label>
                            <Button Content="Finaler Schlüssel fertig"
                                    Command="{s:Action FinalKeyFinishedCommand}"/>
                        </StackPanel>
                    </DataGridTextColumn.Header>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </ScrollViewer>
</UserControl>